-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParLL.y
-----------------------------------------------------------------------------

state 25 contains 6 reduce/reduce conflicts.
state 26 contains 6 reduce/reduce conflicts.
state 32 contains 6 shift/reduce conflicts.
state 33 contains 6 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_Ident                                   (1)
	Program -> ListDef                                 (2)
	ListDef ->                                         (3)
	ListDef -> Def                                     (4)
	ListDef -> Def ';;' ListDef                        (5)
	Def -> Ident '=' Term                              (6)
	Pattern -> Ident                                   (7)
	Pattern -> '[' ListPattern ']'                     (8)
	ListPattern ->                                     (9)
	ListPattern -> Pattern                             (10)
	ListPattern -> Pattern ',' ListPattern             (11)
	Term -> '\\' Pattern '.' Term                      (12)
	Term -> '\\!' Pattern '.' Term                     (13)
	Term -> Term1                                      (14)
	Term1 -> Pattern                                   (15)
	Term1 -> '!' Term1                                 (16)
	Term1 -> Term Term1                                (17)
	Term1 -> '(' Term ')'                              (18)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'('            { PT _ (TS _ 2) }
	')'            { PT _ (TS _ 3) }
	','            { PT _ (TS _ 4) }
	'.'            { PT _ (TS _ 5) }
	';;'           { PT _ (TS _ 6) }
	'='            { PT _ (TS _ 7) }
	'['            { PT _ (TS _ 8) }
	'\\'           { PT _ (TS _ 9) }
	'\\!'          { PT _ (TS _ 10) }
	']'            { PT _ (TS _ 11) }
	L_Ident        { PT _ (TV $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Program         rule  2
	ListDef         rules 3, 4, 5
	Def             rule  6
	Pattern         rules 7, 8
	ListPattern     rules 9, 10, 11
	Term            rules 12, 13, 14
	Term1           rules 15, 16, 17, 18

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	L_Ident        shift, and enter state 2
	%eof           reduce using rule 3

	Ident          goto state 3
	Program        goto state 4
	ListDef        goto state 5
	Def            goto state 6

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!'            reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	','            reduce using rule 1
	'.'            reduce using rule 1
	';;'           reduce using rule 1
	'='            reduce using rule 1
	'['            reduce using rule 1
	'\\'           reduce using rule 1
	'\\!'          reduce using rule 1
	']'            reduce using rule 1
	L_Ident        reduce using rule 1
	%eof           reduce using rule 1


State 3

	Def -> Ident . '=' Term                             (rule 6)

	'='            shift, and enter state 8


State 4

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 5

	Program -> ListDef .                                (rule 2)

	%eof           reduce using rule 2


State 6

	ListDef -> Def .                                    (rule 4)
	ListDef -> Def . ';;' ListDef                       (rule 5)

	';;'           shift, and enter state 7
	%eof           reduce using rule 4


State 7

	ListDef -> Def ';;' . ListDef                       (rule 5)

	L_Ident        shift, and enter state 2
	%eof           reduce using rule 3

	Ident          goto state 3
	ListDef        goto state 18
	Def            goto state 6

State 8

	Def -> Ident '=' . Term                             (rule 6)

	'!'            shift, and enter state 13
	'('            shift, and enter state 14
	'['            shift, and enter state 15
	'\\'           shift, and enter state 16
	'\\!'          shift, and enter state 17
	L_Ident        shift, and enter state 2

	Ident          goto state 9
	Pattern        goto state 10
	Term           goto state 11
	Term1          goto state 12

State 9

	Pattern -> Ident .                                  (rule 7)

	'!'            reduce using rule 7
	'('            reduce using rule 7
	')'            reduce using rule 7
	','            reduce using rule 7
	'.'            reduce using rule 7
	';;'           reduce using rule 7
	'['            reduce using rule 7
	'\\'           reduce using rule 7
	'\\!'          reduce using rule 7
	']'            reduce using rule 7
	L_Ident        reduce using rule 7
	%eof           reduce using rule 7


State 10

	Term1 -> Pattern .                                  (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	')'            reduce using rule 15
	';;'           reduce using rule 15
	'['            reduce using rule 15
	'\\'           reduce using rule 15
	'\\!'          reduce using rule 15
	L_Ident        reduce using rule 15
	%eof           reduce using rule 15


State 11

	Def -> Ident '=' Term .                             (rule 6)
	Term1 -> Term . Term1                               (rule 17)

	'!'            shift, and enter state 13
	'('            shift, and enter state 14
	';;'           reduce using rule 6
	'['            shift, and enter state 15
	'\\'           shift, and enter state 16
	'\\!'          shift, and enter state 17
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 6

	Ident          goto state 9
	Pattern        goto state 10
	Term           goto state 24
	Term1          goto state 26

State 12

	Term -> Term1 .                                     (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	')'            reduce using rule 14
	';;'           reduce using rule 14
	'['            reduce using rule 14
	'\\'           reduce using rule 14
	'\\!'          reduce using rule 14
	L_Ident        reduce using rule 14
	%eof           reduce using rule 14


State 13

	Term1 -> '!' . Term1                                (rule 16)

	'!'            shift, and enter state 13
	'('            shift, and enter state 14
	'['            shift, and enter state 15
	'\\'           shift, and enter state 16
	'\\!'          shift, and enter state 17
	L_Ident        shift, and enter state 2

	Ident          goto state 9
	Pattern        goto state 10
	Term           goto state 24
	Term1          goto state 25

State 14

	Term1 -> '(' . Term ')'                             (rule 18)

	'!'            shift, and enter state 13
	'('            shift, and enter state 14
	'['            shift, and enter state 15
	'\\'           shift, and enter state 16
	'\\!'          shift, and enter state 17
	L_Ident        shift, and enter state 2

	Ident          goto state 9
	Pattern        goto state 10
	Term           goto state 23
	Term1          goto state 12

State 15

	Pattern -> '[' . ListPattern ']'                    (rule 8)

	'['            shift, and enter state 15
	']'            reduce using rule 9
	L_Ident        shift, and enter state 2

	Ident          goto state 9
	Pattern        goto state 21
	ListPattern    goto state 22

State 16

	Term -> '\\' . Pattern '.' Term                     (rule 12)

	'['            shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 9
	Pattern        goto state 20

State 17

	Term -> '\\!' . Pattern '.' Term                    (rule 13)

	'['            shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 9
	Pattern        goto state 19

State 18

	ListDef -> Def ';;' ListDef .                       (rule 5)

	%eof           reduce using rule 5


State 19

	Term -> '\\!' Pattern . '.' Term                    (rule 13)

	'.'            shift, and enter state 31


State 20

	Term -> '\\' Pattern . '.' Term                     (rule 12)

	'.'            shift, and enter state 30


State 21

	ListPattern -> Pattern .                            (rule 10)
	ListPattern -> Pattern . ',' ListPattern            (rule 11)

	','            shift, and enter state 29
	']'            reduce using rule 10


State 22

	Pattern -> '[' ListPattern . ']'                    (rule 8)

	']'            shift, and enter state 28


State 23

	Term1 -> Term . Term1                               (rule 17)
	Term1 -> '(' Term . ')'                             (rule 18)

	'!'            shift, and enter state 13
	'('            shift, and enter state 14
	')'            shift, and enter state 27
	'['            shift, and enter state 15
	'\\'           shift, and enter state 16
	'\\!'          shift, and enter state 17
	L_Ident        shift, and enter state 2

	Ident          goto state 9
	Pattern        goto state 10
	Term           goto state 24
	Term1          goto state 26

State 24

	Term1 -> Term . Term1                               (rule 17)

	'!'            shift, and enter state 13
	'('            shift, and enter state 14
	'['            shift, and enter state 15
	'\\'           shift, and enter state 16
	'\\!'          shift, and enter state 17
	L_Ident        shift, and enter state 2

	Ident          goto state 9
	Pattern        goto state 10
	Term           goto state 24
	Term1          goto state 26

State 25

	Term -> Term1 .                                     (rule 14)
	Term1 -> '!' Term1 .                                (rule 16)

	'!'            reduce using rule 16
			(reduce using rule 14)

	'('            reduce using rule 16
			(reduce using rule 14)

	')'            reduce using rule 16
	';;'           reduce using rule 16
	'['            reduce using rule 16
			(reduce using rule 14)

	'\\'           reduce using rule 16
			(reduce using rule 14)

	'\\!'          reduce using rule 16
			(reduce using rule 14)

	L_Ident        reduce using rule 16
			(reduce using rule 14)

	%eof           reduce using rule 16


State 26

	Term -> Term1 .                                     (rule 14)
	Term1 -> Term Term1 .                               (rule 17)

	'!'            reduce using rule 17
			(reduce using rule 14)

	'('            reduce using rule 17
			(reduce using rule 14)

	')'            reduce using rule 17
	';;'           reduce using rule 17
	'['            reduce using rule 17
			(reduce using rule 14)

	'\\'           reduce using rule 17
			(reduce using rule 14)

	'\\!'          reduce using rule 17
			(reduce using rule 14)

	L_Ident        reduce using rule 17
			(reduce using rule 14)

	%eof           reduce using rule 17


State 27

	Term1 -> '(' Term ')' .                             (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	')'            reduce using rule 18
	';;'           reduce using rule 18
	'['            reduce using rule 18
	'\\'           reduce using rule 18
	'\\!'          reduce using rule 18
	L_Ident        reduce using rule 18
	%eof           reduce using rule 18


State 28

	Pattern -> '[' ListPattern ']' .                    (rule 8)

	'!'            reduce using rule 8
	'('            reduce using rule 8
	')'            reduce using rule 8
	','            reduce using rule 8
	'.'            reduce using rule 8
	';;'           reduce using rule 8
	'['            reduce using rule 8
	'\\'           reduce using rule 8
	'\\!'          reduce using rule 8
	']'            reduce using rule 8
	L_Ident        reduce using rule 8
	%eof           reduce using rule 8


State 29

	ListPattern -> Pattern ',' . ListPattern            (rule 11)

	'['            shift, and enter state 15
	']'            reduce using rule 9
	L_Ident        shift, and enter state 2

	Ident          goto state 9
	Pattern        goto state 21
	ListPattern    goto state 34

State 30

	Term -> '\\' Pattern '.' . Term                     (rule 12)

	'!'            shift, and enter state 13
	'('            shift, and enter state 14
	'['            shift, and enter state 15
	'\\'           shift, and enter state 16
	'\\!'          shift, and enter state 17
	L_Ident        shift, and enter state 2

	Ident          goto state 9
	Pattern        goto state 10
	Term           goto state 33
	Term1          goto state 12

State 31

	Term -> '\\!' Pattern '.' . Term                    (rule 13)

	'!'            shift, and enter state 13
	'('            shift, and enter state 14
	'['            shift, and enter state 15
	'\\'           shift, and enter state 16
	'\\!'          shift, and enter state 17
	L_Ident        shift, and enter state 2

	Ident          goto state 9
	Pattern        goto state 10
	Term           goto state 32
	Term1          goto state 12

State 32

	Term -> '\\!' Pattern '.' Term .                    (rule 13)
	Term1 -> Term . Term1                               (rule 17)

	'!'            shift, and enter state 13
			(reduce using rule 13)

	'('            shift, and enter state 14
			(reduce using rule 13)

	')'            reduce using rule 13
	';;'           reduce using rule 13
	'['            shift, and enter state 15
			(reduce using rule 13)

	'\\'           shift, and enter state 16
			(reduce using rule 13)

	'\\!'          shift, and enter state 17
			(reduce using rule 13)

	L_Ident        shift, and enter state 2
			(reduce using rule 13)

	%eof           reduce using rule 13

	Ident          goto state 9
	Pattern        goto state 10
	Term           goto state 24
	Term1          goto state 26

State 33

	Term -> '\\' Pattern '.' Term .                     (rule 12)
	Term1 -> Term . Term1                               (rule 17)

	'!'            shift, and enter state 13
			(reduce using rule 12)

	'('            shift, and enter state 14
			(reduce using rule 12)

	')'            reduce using rule 12
	';;'           reduce using rule 12
	'['            shift, and enter state 15
			(reduce using rule 12)

	'\\'           shift, and enter state 16
			(reduce using rule 12)

	'\\!'          shift, and enter state 17
			(reduce using rule 12)

	L_Ident        shift, and enter state 2
			(reduce using rule 12)

	%eof           reduce using rule 12

	Ident          goto state 9
	Pattern        goto state 10
	Term           goto state 24
	Term1          goto state 26

State 34

	ListPattern -> Pattern ',' ListPattern .            (rule 11)

	']'            reduce using rule 11


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 19
Number of terminals: 12
Number of non-terminals: 9
Number of states: 35
