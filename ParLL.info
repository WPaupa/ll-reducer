-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParLL.y
-----------------------------------------------------------------------------

state 21 contains 5 reduce/reduce conflicts.
state 22 contains 5 reduce/reduce conflicts.
state 26 contains 5 shift/reduce conflicts.
state 27 contains 5 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_Ident                                   (1)
	Program -> ListDef                                 (2)
	ListDef ->                                         (3)
	ListDef -> Def                                     (4)
	ListDef -> Def ';;' ListDef                        (5)
	Def -> Ident '=' Term                              (6)
	Term -> '\\' Ident '.' Term                        (7)
	Term -> '\\!' Ident '.' Term                       (8)
	Term -> Term1                                      (9)
	Term1 -> Ident                                     (10)
	Term1 -> '!' Term1                                 (11)
	Term1 -> Term Term1                                (12)
	Term1 -> '(' Term ')'                              (13)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'('            { PT _ (TS _ 2) }
	')'            { PT _ (TS _ 3) }
	'.'            { PT _ (TS _ 4) }
	';;'           { PT _ (TS _ 5) }
	'='            { PT _ (TS _ 6) }
	'\\'           { PT _ (TS _ 7) }
	'\\!'          { PT _ (TS _ 8) }
	L_Ident        { PT _ (TV $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Program         rule  2
	ListDef         rules 3, 4, 5
	Def             rule  6
	Term            rules 7, 8, 9
	Term1           rules 10, 11, 12, 13

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	L_Ident        shift, and enter state 2
	%eof           reduce using rule 3

	Ident          goto state 3
	Program        goto state 4
	ListDef        goto state 5
	Def            goto state 6

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!'            reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'.'            reduce using rule 1
	';;'           reduce using rule 1
	'='            reduce using rule 1
	'\\'           reduce using rule 1
	'\\!'          reduce using rule 1
	L_Ident        reduce using rule 1
	%eof           reduce using rule 1


State 3

	Def -> Ident . '=' Term                             (rule 6)

	'='            shift, and enter state 8


State 4

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 5

	Program -> ListDef .                                (rule 2)

	%eof           reduce using rule 2


State 6

	ListDef -> Def .                                    (rule 4)
	ListDef -> Def . ';;' ListDef                       (rule 5)

	';;'           shift, and enter state 7
	%eof           reduce using rule 4


State 7

	ListDef -> Def ';;' . ListDef                       (rule 5)

	L_Ident        shift, and enter state 2
	%eof           reduce using rule 3

	Ident          goto state 3
	ListDef        goto state 16
	Def            goto state 6

State 8

	Def -> Ident '=' . Term                             (rule 6)

	'!'            shift, and enter state 12
	'('            shift, and enter state 13
	'\\'           shift, and enter state 14
	'\\!'          shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 9
	Term           goto state 10
	Term1          goto state 11

State 9

	Term1 -> Ident .                                    (rule 10)

	'!'            reduce using rule 10
	'('            reduce using rule 10
	')'            reduce using rule 10
	';;'           reduce using rule 10
	'\\'           reduce using rule 10
	'\\!'          reduce using rule 10
	L_Ident        reduce using rule 10
	%eof           reduce using rule 10


State 10

	Def -> Ident '=' Term .                             (rule 6)
	Term1 -> Term . Term1                               (rule 12)

	'!'            shift, and enter state 12
	'('            shift, and enter state 13
	';;'           reduce using rule 6
	'\\'           shift, and enter state 14
	'\\!'          shift, and enter state 15
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 6

	Ident          goto state 9
	Term           goto state 20
	Term1          goto state 22

State 11

	Term -> Term1 .                                     (rule 9)

	'!'            reduce using rule 9
	'('            reduce using rule 9
	')'            reduce using rule 9
	';;'           reduce using rule 9
	'\\'           reduce using rule 9
	'\\!'          reduce using rule 9
	L_Ident        reduce using rule 9
	%eof           reduce using rule 9


State 12

	Term1 -> '!' . Term1                                (rule 11)

	'!'            shift, and enter state 12
	'('            shift, and enter state 13
	'\\'           shift, and enter state 14
	'\\!'          shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 9
	Term           goto state 20
	Term1          goto state 21

State 13

	Term1 -> '(' . Term ')'                             (rule 13)

	'!'            shift, and enter state 12
	'('            shift, and enter state 13
	'\\'           shift, and enter state 14
	'\\!'          shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 9
	Term           goto state 19
	Term1          goto state 11

State 14

	Term -> '\\' . Ident '.' Term                       (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 18

State 15

	Term -> '\\!' . Ident '.' Term                      (rule 8)

	L_Ident        shift, and enter state 2

	Ident          goto state 17

State 16

	ListDef -> Def ';;' ListDef .                       (rule 5)

	%eof           reduce using rule 5


State 17

	Term -> '\\!' Ident . '.' Term                      (rule 8)

	'.'            shift, and enter state 25


State 18

	Term -> '\\' Ident . '.' Term                       (rule 7)

	'.'            shift, and enter state 24


State 19

	Term1 -> Term . Term1                               (rule 12)
	Term1 -> '(' Term . ')'                             (rule 13)

	'!'            shift, and enter state 12
	'('            shift, and enter state 13
	')'            shift, and enter state 23
	'\\'           shift, and enter state 14
	'\\!'          shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 9
	Term           goto state 20
	Term1          goto state 22

State 20

	Term1 -> Term . Term1                               (rule 12)

	'!'            shift, and enter state 12
	'('            shift, and enter state 13
	'\\'           shift, and enter state 14
	'\\!'          shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 9
	Term           goto state 20
	Term1          goto state 22

State 21

	Term -> Term1 .                                     (rule 9)
	Term1 -> '!' Term1 .                                (rule 11)

	'!'            reduce using rule 11
			(reduce using rule 9)

	'('            reduce using rule 11
			(reduce using rule 9)

	')'            reduce using rule 11
	';;'           reduce using rule 11
	'\\'           reduce using rule 11
			(reduce using rule 9)

	'\\!'          reduce using rule 11
			(reduce using rule 9)

	L_Ident        reduce using rule 11
			(reduce using rule 9)

	%eof           reduce using rule 11


State 22

	Term -> Term1 .                                     (rule 9)
	Term1 -> Term Term1 .                               (rule 12)

	'!'            reduce using rule 12
			(reduce using rule 9)

	'('            reduce using rule 12
			(reduce using rule 9)

	')'            reduce using rule 12
	';;'           reduce using rule 12
	'\\'           reduce using rule 12
			(reduce using rule 9)

	'\\!'          reduce using rule 12
			(reduce using rule 9)

	L_Ident        reduce using rule 12
			(reduce using rule 9)

	%eof           reduce using rule 12


State 23

	Term1 -> '(' Term ')' .                             (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	')'            reduce using rule 13
	';;'           reduce using rule 13
	'\\'           reduce using rule 13
	'\\!'          reduce using rule 13
	L_Ident        reduce using rule 13
	%eof           reduce using rule 13


State 24

	Term -> '\\' Ident '.' . Term                       (rule 7)

	'!'            shift, and enter state 12
	'('            shift, and enter state 13
	'\\'           shift, and enter state 14
	'\\!'          shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 9
	Term           goto state 27
	Term1          goto state 11

State 25

	Term -> '\\!' Ident '.' . Term                      (rule 8)

	'!'            shift, and enter state 12
	'('            shift, and enter state 13
	'\\'           shift, and enter state 14
	'\\!'          shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 9
	Term           goto state 26
	Term1          goto state 11

State 26

	Term -> '\\!' Ident '.' Term .                      (rule 8)
	Term1 -> Term . Term1                               (rule 12)

	'!'            shift, and enter state 12
			(reduce using rule 8)

	'('            shift, and enter state 13
			(reduce using rule 8)

	')'            reduce using rule 8
	';;'           reduce using rule 8
	'\\'           shift, and enter state 14
			(reduce using rule 8)

	'\\!'          shift, and enter state 15
			(reduce using rule 8)

	L_Ident        shift, and enter state 2
			(reduce using rule 8)

	%eof           reduce using rule 8

	Ident          goto state 9
	Term           goto state 20
	Term1          goto state 22

State 27

	Term -> '\\' Ident '.' Term .                       (rule 7)
	Term1 -> Term . Term1                               (rule 12)

	'!'            shift, and enter state 12
			(reduce using rule 7)

	'('            shift, and enter state 13
			(reduce using rule 7)

	')'            reduce using rule 7
	';;'           reduce using rule 7
	'\\'           shift, and enter state 14
			(reduce using rule 7)

	'\\!'          shift, and enter state 15
			(reduce using rule 7)

	L_Ident        shift, and enter state 2
			(reduce using rule 7)

	%eof           reduce using rule 7

	Ident          goto state 9
	Term           goto state 20
	Term1          goto state 22

-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 14
Number of terminals: 9
Number of non-terminals: 7
Number of states: 28
